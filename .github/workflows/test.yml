name: Test – Omnixys Person Service

on:
#   push:
#     branches: [ main ]
#   pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/${{ secrets.SERVICE }}
  ENABLE_SIGN: true
  CURRENT_DATE: ${{ vars.CURRENT_DATE }}

jobs:
  test:
    name: Run Gradle Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permissions
        run: chmod +x ./gradlew

      - name: Run Tests
        run: ./gradlew clean test

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: gradle-test-reports
          path: build/reports/tests/test/

  sbom:
    name: Generate SBOMs
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Generate SBOM XML + JSON
        run: ./gradlew cyclonedxBomXml cyclonedxBomJson

      - name: Upload SBOMs
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ env.CURRENT_DATE }}
          path: build/reports/sbom/json

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: sbom
    steps:
      - uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_Linux-64bit.tar.gz
          tar -xzf trivy_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Run Trivy Image Scan
        run: |
          mkdir -p trivy-reports
          trivy image --exit-code 0 --format table --severity HIGH,CRITICAL -o trivy-reports/report.txt ${{ env.IMAGE_NAME }}:${{ env.CURRENT_DATE }}
          trivy image --exit-code 0 --format json -o trivy-reports/report.json ${{ env.IMAGE_NAME }}:${{ env.CURRENT_DATE }}
        continue-on-error: true

      - name: Upload Trivy Reports
        uses: actions/upload-artifact@v4
        with:
          name: Trivy-Reports
          path: trivy-reports/

  sign-and-attest:
    name: Sign & Attest Image
    if: vars.ENABLE_SIGN == 'true'
    runs-on: ubuntu-latest
    needs: [docker-build]
    env:
      COSIGN_EXPERIMENTAL: "1"
    steps:
      - uses: actions/checkout@v4

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.4.0

      - name: Sign Docker Image
        run: cosign sign --yes --recursive ${{ env.IMAGE_NAME }}:${{ env.CURRENT_DATE }}

      - name: Check SBOM XML file
        run: |
          if [ ! -f build/reports/sbom/xml/bom.xml ]; then
            echo "❌ SBOM XML not found. Check SBOM generation!"
            exit 1
          fi

      - name: Attest SBOM (CycloneDX XML)
        run: |
          cosign attest \
            --yes \
            --type cyclonedx \
            --predicate build/reports/sbom/xml/bom.xml \
            ${{ env.IMAGE_NAME }}:${{ env.CURRENT_DATE }}
