name: Update Docker Image Tag

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write # ‚Üê WICHTIG f√ºr Cosign ohne Schl√ºssel (keyless signing)

env:
  COSIGN_EXPERIMENTAL: "true"
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/${{ secrets.SERVICE }}-service
  MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
  SERVER_PORT: ${{ secrets.SERVER_PORT }}
  TEST_SERVER_PORT: ${{ secrets.TEST_SERVER_PORT }}

  ACTIVE_PROFILE: ${{ secrets.ACTIVE_PROFILE }}
  HTTPS: ${{ secrets.HTTPS }}

  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  MONGODB_USER_NAME: ${{ secrets.MONGODB_USER_NAME }}
  MONGODB_USER_PASSWORT: ${{ secrets.MONGODB_USER_PASSWORT }}
  TEST_MONGODB_DATABASE: ${{ secrets.TEST_MONGODB_DATABASE }}

  NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  KC_SERVICE_SECRET: ${{ secrets.KC_SERVICE_SECRET }}
  KC_SERVICE_CLIENT_ID: ${{ secrets.KC_SERVICE_CLIENT_ID }}
  KC_SERVICE_REALM: ${{ secrets.KC_SERVICE_REALM }}
  KC_SERVICE_HOST: ${{ secrets.KC_SERVICE_HOST }}
  KC_SERVICE_PORT: ${{ secrets.KC_SERVICE_PORT }}

  KAFKA_HOST: ${{ secrets.KAFKA_HOST }}
  TEMPO_HOST: ${{ secrets.TEMPO_HOST }}
  KEYS_PATH: ${{ secrets.KEYS_PATH }}

jobs:
  docker:
    name: üê≥ Docker Build & Push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [24]
    env:
      CURRENT_DATE: ${{ vars.CURRENT_DATE }}
    if: github.actor == 'caleb-script' && github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Print ref name
        run: echo "This workflow was triggered by ${{ github.ref_name }}"

      - name: Print actor
        run: echo "The actor is ${{ github.actor }}"

      - name: Print tag
        run: echo "The tag is ${{ github.ref_name }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: |
            buildx-

      - name: Build and Push Docker Image (Multi-Arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.CURRENT_DATE }}
            ${{ env.IMAGE_NAME }}:latest
          build-args: |
            REVISION=${{ github.sha }}
            CREATED=${{ env.CURRENT_DATE }}
            APP_VERSION=${{ env.CURRENT_DATE }}
            APP_NAME=${{ secrets.SERVICE }}
            JAVA_VERSION=${{ matrix.java-version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign Docker Image with cosign (OIDC/GitHub)
        run: |
          cosign sign --yes --recursive ${{ env.IMAGE_NAME }}:${{ env.CURRENT_DATE }}
          cosign sign --yes --recursive ${{ env.IMAGE_NAME }}:latest
